{"mappings":"gBAqDgRA,E,yBAjDE,QACAC,EAARC,SAATC,cAAd,UAC+BC,EAALF,SAATC,cAAd,SAC4BE,EAAZ,YAGYC,EAAvB,SAAAC,GAU2B,MATnB,oDAEpBC,OAAMD,EAAN,4H,EASmCE,EAAZC,KAALC,MAANC,aAAbC,QAARR,KAAf,GA+ByDL,EAAZS,EAAVK,KAAJ,SAAAC,G,OAART,EAArBS,E,IAAPC,KAAL,IACyEZ,EAAHa,mBAAnB,aAAdjB,GAGsCkB,EAALC,iBAAjB,UAjCsB,SAAtBC,GACoBA,EAAFC,iBAElB,KAAgBpB,EAANM,QACUH,EAAHa,mBAAnB,aAAdX,EAArBL,EAANM,QAE+DE,EAAVa,KAALrB,EAANM,OACqBK,aAAbW,QAARlB,EAAXK,KAALc,UAAVf,IAE+CW,EAAFK,cAAdC,Q,IAyBkBtB,EAAHe,iBAAjB,SAnBoB,SAApBC,GACkB,GAA1B,WAAsBA,EAAFO,OAAPC,SAAvB,CACkC,IAANC,EAATT,EAAFO,OAAPG,QAAR,MAC0BC,EAAfF,EAAP1B,cAAd,SAATI,MAEmDE,EAAVuB,OAAPvB,EAAVwB,QAARF,GAAf,GACkDnB,aAAbW,QAARlB,EAAXK,KAALc,UAAVf,IAE+CoB,EAAPK,Q","sources":["src/js/todolist-2.js"],"sourcesContent":["/* Викоритовуй шаблон списку завдань з файлу todoList.html для створення функціоналу для списку завдань.\nВикористовуй поширення подій а також local storage, щоб при оновленні твої завдання залишалися на сторінці. Для цього використовуй допоміжну функцію setTasksOnLoad, яка буде отримувати далі з LS і додаватиме їх в html\nПри виклику функції addTask зберігай завдання local storage і додавай його у розмітку\nПри deleteTask знаходь завдання по тексту, та видаляй його і з local storage і з розмітки. */\nconst form = document.querySelector('form');\nconst input = document.querySelector('#input');\nconst ul = document.querySelector('#list');\nconst SAVED_KEY = 'tasksToDo';\n\n// Function to create new task element, return LI element\nconst createNewTaskElement = value => {\n  const todoMarkup = `\n        <li>\n          <input disabled value=\"${value}\"/>\n          <div>\n            <button data-action=\"delete\">Delete</button>\n          </div>\n        </li>\n        `;\n\n  return todoMarkup;\n};\nconst tasksToDo = JSON.parse(localStorage.getItem(SAVED_KEY)) || [];\n// Function to handle submit action, call addTask inside\nfunction handleSubmit(e) {\n  e.preventDefault();\n\n  if (input.value === '') return;\n  ul.insertAdjacentHTML('afterbegin', createNewTaskElement(input.value));\n\n  tasksToDo.push(input.value);\n  localStorage.setItem(SAVED_KEY, JSON.stringify(tasksToDo));\n\n  e.currentTarget.reset();\n}\n\n// Function to add a task to the list (use createNewTaskElement) and add to LS\n\n// Function to delete a task from the list and delete from LS\nfunction deleteTask(e) {\n  if (e.target.nodeName === 'BUTTON') {\n    const toDoEl = e.target.closest('li');\n    const toDoToRemove = toDoEl.querySelector('input').value;\n\n    tasksToDo.splice(tasksToDo.indexOf(toDoToRemove), 1);\n    localStorage.setItem(SAVED_KEY, JSON.stringify(tasksToDo));\n\n    toDoEl.remove();\n  }\n}\n\n// Function to get tasks from LS and set them into ul\nfunction setTasksOnLoad() {\n  const markUpNew = tasksToDo.map(task => createNewTaskElement(task)).join('');\n  ul.insertAdjacentHTML('afterbegin', markUpNew);\n}\nsetTasksOnLoad();\nform.addEventListener('submit', handleSubmit);\nul.addEventListener('click', deleteTask);\n"],"names":["markUpNew","$33867d819bf43d25$var$input","document","querySelector","$33867d819bf43d25$var$ul","$33867d819bf43d25$var$SAVED_KEY","$33867d819bf43d25$var$createNewTaskElement","value","concat","$33867d819bf43d25$var$tasksToDo","JSON","parse","localStorage","getItem","map","task","join","insertAdjacentHTML","$33867d819bf43d25$var$form","addEventListener","e","preventDefault","push","setItem","stringify","currentTarget","reset","target","nodeName","toDoEl","closest","toDoToRemove","splice","indexOf","remove"],"version":3,"file":"todolist-2.3012ae0b.js.map"}