{"mappings":"AAmDA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,mBAC7BC,KAAMF,SAASC,cAAc,eAC7BE,cAAeH,SAASC,cAAc,WAGlCF,KAAEK,EAAIF,KAAEG,EAAIF,cAAEG,GAAkBR,EAEhCS,EAAc,IA3DpB,MACEC,GAAY,yCACZC,GAAW,8CAEXC,GACAC,GAEAC,GAAgB,IAAIC,gBAAgB,CAClCC,SAAU,GACVC,UAAWC,MAAKP,EAChBQ,MAAO,QACPC,YAAa,aAGfC,cACEH,MAAKN,EAAQ,EACbM,MAAKL,EAAe,E,CAGtBS,kBACE,MAAMC,QAAiBC,MACrB,GAAGN,MAAKR,WAAmBQ,MAAKL,UAAqBK,MAAKN,KACxDM,MAAKJ,KAIT,IAAKS,EAASE,GACZ,MAAM,IAAIC,MAAMH,EAASI,YAI3B,aADmBJ,EAASK,M,CAI1BhB,WACF,OAAOM,MAAKN,C,CAGVA,SAAKiB,GACPX,MAAKN,EAAQiB,C,CAGXhB,gBAAYiB,GACdZ,MAAKL,EAAeiB,C,CAGlBjB,kBACF,OAAOK,MAAKL,C,GAchB,IAAIkB,EAAW,IAAIC,sBAEnB,SAAkBC,EAASC,GACzBD,EAAQE,SAAQC,IACVA,EAAMC,gBAkBdf,iBACE,MAAMC,QAAiBd,EAAY6B,YAEnC,IAAKf,EAASgB,QAAQC,OAEpB,YADAhC,EAAciC,UAAUC,OAAO,cAIjCC,EAAapB,EAASqB,YAEtB,MAAMC,GApBoBC,EAoBQvB,EAASgB,QAnBpCO,EACJC,KACC,EAACC,KAAEA,EAAIC,gBAAEA,KAAsB,iDACjBD,EAAKE,eAAeD,uCAGnCE,KAAK,KAPV,IAA4BL,EAyB1B,GAJAvC,EAAK6C,mBAAmB,YAAaP,GAErCpC,EAAYG,MAAQ,EAEhBH,EAAYG,KAAO+B,EACrBnC,EAAciC,UAAUC,OAAO,cAC/BX,EAASsB,UAAU7C,E,CAlCjB8C,EAAe,G,IAKrB,IAAIX,EAAa,EAgDjBrC,EAAKiD,iBAAiB,UAdtBjC,eAA4BkC,GAC1BA,EAAEC,iBACF,MAAMC,EAAQF,EAAEG,cAAcC,SAASF,MAAMG,MAAMC,OAE9CJ,IAELjD,EAAYI,YAAc6C,EAC1BjD,EAAYG,KAAO,EACnBL,EAAKwD,UAAY,GAEjBvD,EAAciC,UAAUuB,IAAI,cAC5BjC,EAASkC,QAAQzD,G","sources":["src/js/infinite-scroll.js"],"sourcesContent":["class UnsplashAPI {\n  #BASE_URL = 'https://api.unsplash.com/search/photos';\n  #API_KEY = 'LxvKVGJqiSe6NcEVZOaLXC-f2JIIWZaq_o0WrF8mwJc';\n\n  #page;\n  #searchQuery;\n\n  #searchParams = new URLSearchParams({\n    per_page: 30,\n    client_id: this.#API_KEY,\n    color: 'black',\n    orientation: 'portrait',\n  });\n\n  constructor() {\n    this.#page = 1;\n    this.#searchQuery = '';\n  }\n\n  async getImages() {\n    const response = await fetch(\n      `${this.#BASE_URL}?query=${this.#searchQuery}&page=${this.#page}&${\n        this.#searchParams\n      }`\n    );\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    const data = await response.json();\n    return data;\n  }\n\n  get page() {\n    return this.#page;\n  }\n\n  set page(newPage) {\n    this.#page = newPage;\n  }\n\n  set searchQuery(newQuery) {\n    this.#searchQuery = newQuery;\n  }\n\n  get searchQuery() {\n    return this.#searchQuery;\n  }\n}\n\nconst refs = {\n  form: document.querySelector('.js-search-form'),\n  list: document.querySelector('.js-gallery'),\n  loadMoreBlock: document.querySelector('.more'),\n};\n\nconst { form, list, loadMoreBlock } = refs;\n\nconst unsplashApi = new UnsplashAPI();\n\nlet observer = new IntersectionObserver(callback);\n\nfunction callback(entries, observer) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      loadMoreItems();\n    }\n  });\n}\n\nlet totalPages = 0;\n\nfunction createGalleryCards(images) {\n  return images\n    .map(\n      ({ urls, alt_description }) => `<li class=\"gallery__item\">\n        <img src=\"${urls.small}\" alt=\"${alt_description}\" class=\"gallery-img\">\n    </li>`\n    )\n    .join('');\n}\n\nasync function loadMoreItems() {\n  const response = await unsplashApi.getImages();\n\n  if (!response.results.length) {\n    loadMoreBlock.classList.remove('is-visible');\n    return;\n  }\n\n  totalPages = response.total_pages;\n\n  const markup = createGalleryCards(response.results);\n  list.insertAdjacentHTML('beforeend', markup);\n\n  unsplashApi.page += 1;\n\n  if (unsplashApi.page > totalPages) {\n    loadMoreBlock.classList.remove('is-visible');\n    observer.unobserve(loadMoreBlock);\n    return;\n  }\n}\n\nasync function handleSubmit(e) {\n  e.preventDefault();\n  const query = e.currentTarget.elements.query.value.trim();\n\n  if (!query) return;\n\n  unsplashApi.searchQuery = query;\n  unsplashApi.page = 1;\n  list.innerHTML = '';\n\n  loadMoreBlock.classList.add('is-visible');\n  observer.observe(loadMoreBlock);\n}\n\nform.addEventListener('submit', handleSubmit);\n"],"names":["$7f13665ecc617d63$var$refs","form","document","querySelector","list","loadMoreBlock","$7f13665ecc617d63$var$form","$7f13665ecc617d63$var$list","$7f13665ecc617d63$var$loadMoreBlock","$7f13665ecc617d63$var$unsplashApi","BASE_URL","API_KEY","page","searchQuery","searchParams","URLSearchParams","per_page","client_id","this","color","orientation","constructor","async","response","fetch","ok","Error","statusText","json","newPage","newQuery","$7f13665ecc617d63$var$observer","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","getImages","results","length","classList","remove","$7f13665ecc617d63$var$totalPages","total_pages","markup","images","map","urls","alt_description","small","join","insertAdjacentHTML","unobserve","$7f13665ecc617d63$var$loadMoreItems","addEventListener","e","preventDefault","query","currentTarget","elements","value","trim","innerHTML","add","observe"],"version":3,"file":"infinite_scroll.c4438b11.js.map"}